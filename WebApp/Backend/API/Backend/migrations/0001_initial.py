# Generated by Django 4.2.23 on 2025-06-18 14:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('certification_standards_url', models.CharField(max_length=255)),
                ('audit_form_url', models.CharField(max_length=255)),
                ('recommended_audit_frequency', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('location', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=10)),
                ('price_per_hour', models.DecimalField(decimal_places=2, max_digits=10)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='Backend.company')),
            ],
        ),
        migrations.CreateModel(
            name='IoTNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=50)),
                ('installation_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Maintenance')], max_length=50)),
                ('batery_level', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='IoTNodeParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_name', models.CharField(max_length=255)),
                ('parameter_unit', models.CharField(max_length=255)),
                ('last_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('last_update', models.DateTimeField(auto_now_add=True)),
                ('iot_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='Backend.iotnode')),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='machines', to='Backend.company')),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=50)),
                ('reference', models.CharField(max_length=255, unique=True)),
                ('energy_consumption', models.DecimalField(decimal_places=2, max_digits=10)),
                ('water_consumption', models.DecimalField(decimal_places=2, max_digits=10)),
                ('waste_generation', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_types', to='Backend.company')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_location', models.JSONField()),
                ('production_date', models.DateTimeField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sell_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('in_stock', 'In Stock'), ('sold', 'Sold'), ('production', 'Production'), ('stored', 'Stored')], max_length=50)),
                ('product_reference', models.CharField(max_length=255, unique=True)),
                ('expiration_date', models.DateField()),
                ('machine_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='Backend.machine')),
            ],
        ),
        migrations.CreateModel(
            name='RawProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('production_location', models.JSONField()),
                ('expiration_date', models.DateField()),
                ('production_date', models.DateField()),
                ('buy_date', models.DateField()),
                ('inicial_quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_products', to='Backend.company')),
            ],
        ),
        migrations.CreateModel(
            name='Regulator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('institution', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='RegulatorCertificationList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regulators', to='Backend.certification')),
                ('regulator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='Backend.regulator')),
            ],
        ),
        migrations.AddField(
            model_name='regulator',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='regulator', to='Backend.user'),
        ),
        migrations.CreateModel(
            name='RawProductUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_used', models.IntegerField()),
                ('usage_date', models.DateTimeField()),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_product_usages', to='Backend.process')),
                ('raw_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_usages', to='Backend.rawproduct')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, unique=True)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_types', to='Backend.company')),
            ],
        ),
        migrations.CreateModel(
            name='ProductProcessList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='Backend.process')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process_list', to='Backend.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCertificationList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reference', models.CharField(max_length=255, unique=True)),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='Backend.certification')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_certifications', to='Backend.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='Backend.producttype'),
        ),
        migrations.CreateModel(
            name='ProcTypeProdTypeList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain_position', models.IntegerField()),
                ('process_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_types', to='Backend.processtype')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_types', to='Backend.producttype')),
            ],
        ),
        migrations.AddField(
            model_name='process',
            name='process_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processes', to='Backend.processtype'),
        ),
        migrations.CreateModel(
            name='PolicyMaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('institution', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=100)),
                ('location', models.JSONField()),
                ('regulations_list_url', models.CharField(max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='policy_maker', to='Backend.user')),
            ],
        ),
        migrations.CreateModel(
            name='MachineProcessList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processes', to='Backend.machine')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='machines', to='Backend.process')),
            ],
        ),
        migrations.CreateModel(
            name='MachineDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='machine_details', to='Backend.iotnodeparameter')),
            ],
        ),
        migrations.AddField(
            model_name='iotnode',
            name='machine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iot_nodes', to='Backend.machine'),
        ),
        migrations.CreateModel(
            name='EmployeeProcessList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processes', to='Backend.employee')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_process_list', to='Backend.process')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyCertificationsList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companies', to='Backend.certification')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='Backend.company')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company', to='Backend.user'),
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_date', models.DateField()),
                ('report_url', models.CharField(blank=True, max_length=255, null=True)),
                ('evaluation_percentage', models.IntegerField()),
                ('evaluation_decision', models.CharField(choices=[('compliant', 'Compliant'), ('non_compliant', 'Non-Compliant'), ('pending', 'Pending')], max_length=50)),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audits', to='Backend.certification')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audits', to='Backend.company')),
                ('regulator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audits', to='Backend.regulator')),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('warning', 'Warning'), ('critical', 'Critical')], max_length=50)),
                ('max_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('min_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('alert_msg', models.CharField(max_length=255)),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='Backend.iotnodeparameter')),
            ],
        ),
    ]
